{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/callBackFunctions/IsIncludes.tsx","components/Loader/Loader.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","app/hooks.ts","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","INITIAL_STATE","query","status","filterReducer","_objectSpread","todos","todosReducer","concat","_toConsumableArray","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","filteredTodos","filterBy","filteredArray","item","title","toLowerCase","trim","includes","completed","Loader","_jsx","className","children","TodoItem","_ref","showTodoUser","id","_jsxs","_Fragment","onClick","TodoList","isLoader","value","visibleTodos","map","TodoFilter","handleChangeSearch","handleChangeStatus","onSubmit","event","preventDefault","onChange","_ref2","target","placeholder","_ref3","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","removeTodoUser","_useState","useState","_useState2","_slicedToArray","user","setUser","handleUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userFetch","wrap","_context","prev","next","userId","sent","stop","apply","useEffect","href","email","name","useAppDispatch","useDispatch","useAppSelector","useSelector","App","setIsLoader","dispatch","catch","error","filters","actionsTodo","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb5aa003.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\nconst INITIAL_STATE = { query: '', status: 'all' };\n\ntype SetQuery = { type: 'query/SET', payload: string };\ntype SetStatus = { type: 'all/SET', payload: string };\n\nconst setStatus = (status: Status):\nSetStatus => ({ type: 'all/SET', payload: status });\nconst setQuery = (query: string):\nSetQuery => ({ type: 'query/SET', payload: query });\n\nexport const actions = { setQuery, setStatus };\ntype ActionFilter = SetQuery | SetStatus;\n\nconst filterReducer = (state = INITIAL_STATE, action: ActionFilter) => {\n  switch (action.type) {\n    case 'query/SET':\n      return { ...state, query: action.payload };\n    case 'all/SET':\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst setTodos = (todos: Todo[]) => ({ type: 'todo/SET', payload: todos });\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  todos = [],\n  action: {\n    type: string,\n    payload: Todo[],\n  },\n): Todo[] => {\n  switch (action.type) {\n    case 'todo/SET':\n      return [...todos, ...action.payload];\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from '../../types/Todo';\n\nconst filteredTodos = (\n  todos: Todo[],\n  query: string,\n  filterBy: string,\n) => {\n  let filteredArray = [...todos];\n\n  if (query) {\n    filteredArray = filteredArray\n      .filter(item => item.title.toLowerCase().trim()\n        .includes(query.toLowerCase().trim()));\n  }\n\n  switch (filterBy) {\n    case 'Completed':\n      filteredArray = filteredArray.filter(item => item.completed);\n      break;\n    case 'Active':\n      filteredArray = filteredArray.filter(item => !item.completed);\n      break;\n    default:\n      break;\n  }\n\n  return filteredArray;\n};\n\nexport default filteredTodos;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  currentTodo: Todo | null,\n  todo: Todo,\n  showTodoUser: (value: Todo) => void,\n};\n\nexport const TodoItem: FC<Props> = ({ todo, currentTodo, showTodoUser }) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <>\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        <span className=\"icon\" data-cy=\"iconCompleted\">\n          {completed\n            ? (\n              <i className=\"fas fa-check\" />\n            )\n            : ''}\n        </span>\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={\n          !completed ? 'has-text-danger' : 'has-text-success'\n        }\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        {todo !== currentTodo\n          ? (\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => showTodoUser(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          )\n          : (\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => showTodoUser(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          )}\n      </td>\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport filteredTodos from '../callBackFunctions/IsIncludes';\nimport { Loader } from '../Loader';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  showTodoUser: (value: Todo) => void,\n  todos: Todo[],\n  value: string,\n  status: string,\n  isLoader: boolean,\n  currentTodo: Todo | null,\n};\n\nexport const TodoList: FC<Props> = ({\n  showTodoUser,\n  isLoader,\n  value,\n  status,\n  todos,\n  currentTodo,\n}) => {\n  const visibleTodos = filteredTodos(todos, value, status);\n\n  return (\n    <>\n      {visibleTodos.length <= 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n      {isLoader\n        ? <Loader />\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n            <tbody>\n              {visibleTodos.map(todo => (\n                <tr\n                  key={todo.id}\n                  data-cy=\"todo\"\n                  className={todo === currentTodo ? 'has-background-info-light' : ''}\n                >\n                  <TodoItem\n                    todo={todo}\n                    currentTodo={currentTodo}\n                    showTodoUser={showTodoUser}\n                  />\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  handleChangeSearch: (value: string) => void,\n  handleChangeStatus: (value: Status) => void,\n  query: string,\n  status: string,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  query,\n  status,\n  handleChangeSearch,\n  handleChangeStatus,\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            data-cy=\"statusSelect\"\n            onChange={({ target }) => handleChangeStatus(\n              target.value as Status,\n            )}\n          >\n            {['All', 'Active', 'Completed'].map(value => (\n              <option key={value} value={value}>{value}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={({ target }) => handleChangeSearch(target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleChangeSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  removeTodoUser: () => void,\n  todo: Todo,\n};\n\nexport const TodoModal: FC<Props> = ({\n  todo,\n  removeTodoUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleUser = async () => {\n    const userFetch = await getUser(todo.userId || 0);\n\n    setUser(userFetch);\n  };\n\n  useEffect(() => {\n    handleUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => removeTodoUser()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!todo.completed\n                  ? (<strong className=\"has-text-danger\">Planned</strong>)\n                  : (<strong className=\"has-text-success\">Done</strong>)}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { useAppSelector, useAppDispatch } from './app/hooks';\nimport { actions } from './features/todos';\nimport { actions as actionsTodo } from './features/currentTodo';\nimport { actions as filters } from './features/filter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [isLoader, setIsLoader] = useState(true);\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    const addTodos = (todosList: Todo[]) => {\n      dispatch(actions.setTodos(todosList));\n    };\n\n    getTodos()\n      .then(res => addTodos(res))\n      .catch(error => error);\n    setIsLoader(false);\n  }, [dispatch]);\n\n  const handleChangeSearch = (value: string) => {\n    dispatch(filters.setQuery(value));\n  };\n\n  const handleChangeStatus = (value: Status) => {\n    dispatch(filters.setStatus(value));\n  };\n\n  const showTodoUser = (todo: Todo) => {\n    dispatch(actionsTodo.setTodo(todo));\n  };\n\n  const removeTodoUser = () => {\n    dispatch(actionsTodo.removeTodo());\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleChangeSearch={handleChangeSearch}\n                handleChangeStatus={handleChangeStatus}\n                query={query}\n                status={status}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={todos}\n                value={query}\n                status={status}\n                showTodoUser={showTodoUser}\n                isLoader={isLoader}\n                currentTodo={currentTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          removeTodoUser={removeTodoUser}\n          todo={currentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}